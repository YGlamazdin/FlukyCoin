syntax = "proto3";

service NetworkService {
  rpc RegisterPeer(PeerRequest) returns (PeerResponse);
  rpc GetPeers(PeerRequest) returns (PeerResponse);
  rpc Ping(Empty) returns (Empty); // Добавляем метод Ping
  rpc GetPeerInfo(Empty) returns (PeerInfoResponse);
  rpc BroadcastTransactionHash(TransactionHash) returns (Ack);
  rpc GetFullTransaction(TransactionHash) returns (Transaction);
  rpc AddTransaction(Transaction) returns (Ack);
  rpc GetAllTransactions(Empty) returns (TransactionList) {}
  rpc BroadcastBlock(Block) returns (Ack);

}

message TransactionList {
    repeated Transaction transactions = 1;
}

message PeerRequest {
  string address = 1;
}

message PeerResponse {
  repeated string peers = 1;
}

message NodeInfoRequest {
}

message PeerInfoResponse {
  string version = 1;
  bool synced = 2;
  int32 blocks = 3;
  string latest_block = 4;
  string block_candidate = 5;
  float  uptime = 6;
  int32 peer_count = 7;
  string network_info = 8;
  int32 pending_transactions = 9;
}

message TransactionHash {
  string hash = 1;
  string from_host = 2;
}

message Transaction {
  string json_data = 1;
}

message Block {
  // Поле для хранения данных блока в виде строки JSON
  string data = 1;
}


message Ack {
  bool success = 1;
}

message Empty {
}